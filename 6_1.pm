
my @Board = (3,5,1,2,5,4,1,5,1,2,5,5,1,3,1,5,1,3,2,1,5,1,1,1,2,3,1,3,1,2,1,1,5,1,5,4,5,5,3,3,1,5,1,1,5,5,1,3,5,5,3,2,2,4,1,5,3,4,2,5,4,1,2,2,5,1,1,2,4,4,1,3,1,3,1,1,2,2,1,1,5,1,1,4,4,5,5,1,2,1,4,1,1,4,4,3,4,2,2,3,3,2,1,3,3,2,1,1,1,2,1,4,2,2,1,5,5,3,4,5,5,2,5,2,2,5,3,3,1,2,4,2,1,5,1,1,2,3,5,5,1,1,5,5,1,4,5,3,5,2,3,2,4,3,1,4,2,5,1,3,2,1,1,3,4,2,1,1,1,1,2,1,4,3,1,3,1,2,4,1,2,4,3,2,3,5,5,3,3,1,2,3,4,5,2,4,5,1,1,1,4,5,3,5,3,5,1,1,5,1,5,3,1,2,3,4,1,1,4,1,2,4,1,5,4,1,5,4,2,1,5,2,1,3,5,5,4,5,5,1,1,4,1,2,3,5,3,3,1,1,1,4,3,1,1,4,1,5,3,5,1,4,2,5,1,1,4,4,4,2,5,1,2,5,2,1,3,1,5,1,2,1,1,5,2,4,2,1,3,5,5,4,1,1,1,5,5,2,1,1);

for (my $i = 0; $i < 10; $i++) {
    my $aBoard = cycleFishes(\@Board);
    @Board = @{$aBoard};
}

use Data::Dumper;
print ("\r =================Result=================== \r");
print (scalar @Board);
print ("\r");

use Data::Dumper;
#print ("\r =================Board=================== \r");
#print Dumper @Board;
print ("\r");


sub cycleFishes {
    my ($aBoard) = @_;

    my @Board = @{$aBoard};
    
    my $CountToPush = 0;
    
    for (my $i = 0; $i < scalar @Board; $i++) {
        
        $Board[$i] -= 1;
        
        if ($Board[$i] < 0) {

            $CountToPush += 1;
            $Board[$i] = 6;
        }
    }
    
    for (my $i = 0; $i < $CountToPush; $i++) {
        
        push(@Board, 8);
    }

    return \@Board;
}

